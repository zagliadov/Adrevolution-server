// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String                     @id @default(cuid())
  email                     String                     @unique
  hash                      String
  salt                      String
  firstName                 String?
  lastName                  String?
  lastLogin                 DateTime?                  @default(now())
  streetAddress             String?
  city                      String?
  province                  String?
  postalCode                String?
  country                   String?
  phoneNumber               String?
  businessHours             BusinessHours?
  company                   Company?                   @relation(name: "Users", fields: [companyId], references: [id])
  companyId                 String?
  positionId                String?
  userPosition              UserPosition?              @relation(fields: [positionId], references: [id])
  userNotificationsSettings UserNotificationsSettings?
  paymentType               PaymentType[]
  VerificationToken         VerificationToken[]

  ownedCompany   Company? @relation(name: "Owner")
  ownedCompanyId String?  @unique
}

model UserPosition {
  id          String        @id @default(cuid())
  name        PositionType  @default(WORKER)
  permissions Permissions[]
  users       User[]
}

enum PositionType {
  COMPANY_OWNER
  LIMITED_WORKER
  WORKER
  DISPATCHER
  MANAGER
  CUSTOM
}

model Permissions {
  id             String       @id @default(cuid())
  isAdmin        Boolean      @default(false)
  userPosition   UserPosition @relation(fields: [userPositionId], references: [id])
  userPositionId String
}

model PaymentType {
  id         String   @id @default(cuid())
  labourCost String   @default("0.00")
  costUnit   CostUnit @default(PER_HOUR)
  userId     String
  user       User     @relation(fields: [userId], references: [id])
}

enum CostUnit {
  PER_HOUR
  PER_MONTH
}

model UserNotificationsSettings {
  id            String  @id @default(cuid())
  userId        String  @unique
  user          User    @relation(fields: [userId], references: [id])
  surveys       Boolean @default(false)
  errorMessages Boolean @default(false)
}

model Company {
  id                   String   @id @default(cuid())
  name                 String?
  phoneNumber          String?
  websiteURL           String?
  email                String?
  street1              String?
  street2              String?
  postCode             String?
  city                 String?
  state                String?
  country              String?
  timezone             String?
  dateFormat           String?
  timeFormat           String?
  firstDayOfWeek       String?
  displayBusinessHours Boolean? @default(false)

  teamSize               String?
  estimatedAnnualRevenue String?
  topPriority            String?
  heardAboutUs           String?
  industry               String?

  ownerId String @unique
  owner   User   @relation(name: "Owner", fields: [ownerId], references: [id])

  users               User[]           @relation(name: "Users")
  resources           Resource[]       @relation("CompanyResources")
  orderCompanies      OrderCompanies[] @relation("contractorOrders")
  subcontractedOrders OrderCompanies[] @relation("subcontractorOrders")
}

model Resource {
  id                   String       @id @default(cuid())
  name                 String
  type                 ResourceType @default(TRUCK)
  userId               String?
  companyId            String
  additionalProperties Json

  company        Company          @relation(fields: [companyId], references: [id], name: "CompanyResources")
  orderResources OrderResources[]
}

enum ResourceType {
  TRUCK
  CAR
  BICYCLE
  COMPUTER
  VACUUM_MACHINE
  SHIP
  AIRPLANE
  TRAIN
  VAN
  BUS
}

model Order {
  id          String      @id @default(cuid())
  description String
  status      OrderStatus @default(PENDING)
  startAt     DateTime
  endAt       DateTime
  meta        String

  orderCompanies OrderCompanies[]
  orderResources OrderResources[]
}

model OrderCompanies {
  id                     String  @id @default(cuid())
  orderId                String
  contractorCompanyId    String
  subcontractorCompanyId String?

  order                Order    @relation(fields: [orderId], references: [id])
  contractorCompany    Company  @relation(name: "contractorOrders", fields: [contractorCompanyId], references: [id])
  subcontractorCompany Company? @relation(name: "subcontractorOrders", fields: [subcontractorCompanyId], references: [id])
}

model OrderResources {
  id         String @id @default(cuid())
  orderId    String
  resourceId String

  order    Order    @relation(fields: [orderId], references: [id])
  resource Resource @relation(fields: [resourceId], references: [id])
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model BusinessHours {
  id        String @id @default(cuid())
  monday    String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
  tuesday   String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
  wednesday String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
  thursday  String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
  friday    String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
  saturday  String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": false}")
  sunday    String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": false}")
  ownerId   String @unique
  owner     User   @relation(fields: [ownerId], references: [id])
}

model VerificationToken {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

// model User {
//   id                        String                     @id @default(cuid())
//   email                     String                     @unique
//   hash                      String
//   salt                      String
//   firstName                 String?
//   lastName                  String?
//   lastLogin                 DateTime?                  @default(now())
//   streetAddress             String?
//   city                      String?
//   province                  String?
//   postalCode                String?
//   country                   String?
//   phoneNumber               String?
//   businessHours             BusinessHours?
//   company                   Company?                   @relation(name: "Users", fields: [companyId], references: [id])
//   companyId                 String?
//   positionId                String?
//   userPosition              UserPosition?              @relation(fields: [positionId], references: [id])
//   userNotificationsSettings UserNotificationsSettings?
//   paymentType               PaymentType[]
//   VerificationToken         VerificationToken[]

//   ownedCompany              Company?                   @relation(name: "Owner", fields: [ownedCompanyId], references: [id])
//   ownedCompanyId            String?                    @unique
// }

// model UserPosition {
//   id          String        @id @default(cuid())
//   name        PositionType  @default(WORKER)
//   permissions Permissions[]
//   users       User[]
// }

// enum PositionType {
//   COMPANY_OWNER
//   LIMITED_WORKER
//   WORKER
//   DISPATCHER
//   MANAGER
//   CUSTOM
// }

// model Permissions {
//   id             String       @id @default(cuid())
//   isAdmin        Boolean      @default(false)
//   userPosition   UserPosition @relation(fields: [userPositionId], references: [id])
//   userPositionId String
// }

// model PaymentType {
//   id         String   @id @default(cuid())
//   labourCost String   @default("0.00")
//   costUnit   CostUnit @default(PER_HOUR)
//   userId     String
//   user       User     @relation(fields: [userId], references: [id])
// }

// enum CostUnit {
//   PER_HOUR
//   PER_MONTH
// }

// model UserNotificationsSettings {
//   id            String  @id @default(cuid())
//   userId        String  @unique
//   user          User    @relation(fields: [userId], references: [id])
//   surveys       Boolean @default(false)
//   errorMessages Boolean @default(false)
// }

// model Company {
//   id                   String   @id @default(cuid())
//   name                 String?
//   phoneNumber          String?
//   websiteURL           String?
//   email                String?
//   street1              String?
//   street2              String?
//   postCode             String?
//   city                 String?
//   state                String?
//   country              String?
//   timezone             String?
//   dateFormat           String?
//   timeFormat           String?
//   firstDayOfWeek       String?
//   displayBusinessHours Boolean? @default(false)

//   teamSize               String?
//   estimatedAnnualRevenue String?
//   topPriority            String?
//   heardAboutUs           String?
//   industry               String?

//   ownerId   String
//   owner     User     @relation(name: "Owner", fields: [ownerId], references: [id])

//   users     User[]     @relation(name: "Users")
//   resources Resource[] @relation(name: "Resources")
//   orderCompanies OrderCompanies[]
// }

// model Resource {
//   id                   String @id
//   name                 String
//   type                 ResourceType       @default(TRUCK)
//   userId               User
//   companyId            Company
//   additionalProperties JSON

//   user                 User     @relation(fields: [userId], references: [id])
//   company              Company  @relation(fields: [companyId], references: [id])
//   orderResources       OrderResources[]
// }

// enum ResourceType {
//   TRUCK
//   CAR
//   BICYCLE
//   COMPUTER
//   VACUUM_MACHINE
// }

// model Order {
//   id          String      @id
//   description String
//   status      OrderStatus @default(PENDING)
//   startAt   DateTime
//   endAt DateTime
//   meta String

// }

// model OrderCompanies {
//   id String      @id
//   orderId -> Order.id
//    contractorCompanyId -> Company.id
//   subcontractorCompanyId -> Company.id @default(null)
// }

// model OrderResources {
//   id String @id
//   orderId -> Order.id / OrderCompanies.id
//   resourceId -> Resource.id
// }

// enum OrderStatus {
//   PENDING
//   IN_PROGRESS
//   COMPLETED
//   CANCELLED
// }

// model BusinessHours {
//   id        String @id @default(cuid())
//   monday    String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
//   tuesday   String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
//   wednesday String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
//   thursday  String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
//   friday    String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": true}")
//   saturday  String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": false}")
//   sunday    String @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"enabled\": false}")
//   ownerId   String @unique
//   owner     User   @relation(fields: [ownerId], references: [id])
// }

// model VerificationToken {
//   id        String   @id @default(cuid())
//   userId    String
//   token     String   @unique
//   createdAt DateTime @default(now())

//   user User @relation(fields: [userId], references: [id])
// }
